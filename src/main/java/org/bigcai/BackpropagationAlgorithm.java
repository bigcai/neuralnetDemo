package org.bigcai;

/**
 * 反向传播算法
 *
 * ## 简单理解为 3 个步骤：
 *  1. 计算出当前的误差项： 利用 【上一个的带权重误差项】x 和 【当前输出（激活值）的损失函数（可能带有惩罚项）】k,计算【出当前误差项】y
 *  2. 计算权重梯度： 利用【当前神经元权重的系数（也就是当前神经元输入值，也就是当前神经元激活值）】k 和 【当前神经元的误差项】x，计算【当前神经元的权重梯度】y。
 *  3. 计算新权重：  利用 【当前神经元各位旧的权重】k、【学习率】k、【权重梯度】x，计算当前神经元各位旧权重的【新权重】y。
 *
 * ## 算法作用：
 * 1.计算【整个网络】的误差项矩阵（神经元矩阵相对应）。
 * 2.计算【每个神经元】的新权重向量。
 */
public class BackpropagationAlgorithm {

}
